apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-beta01'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.artifex.mupdf:fitz:1.17.0' //Looks like 1.18.0 is crashing SDK 30. Rolling back to stable lib.
    implementation 'com.github.satyan:sugar:1.5'
    implementation 'com.android.billingclient:billing:4.0.0'
    implementation 'com.itextpdf:itext7-core:7.1.14'
    implementation 'com.madgag.spongycastle:core:1.58.0.0'
    implementation 'com.google.firebase:firebase-core:19.0.2'
    implementation 'com.google.android.play:core:1.10.2'

    androidTestImplementation 'tools.fastlane:screengrab:2.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}
android {
    signingConfigs {
        release
    }
    compileSdkVersion 31
    defaultConfig {
        minSdkVersion 16 //change to 18 while running fastlane screengrab
        targetSdkVersion 31
        versionName '3.85'
        versionCode 90029
        ndkVersion '21.3.6528147'
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            zipAlignEnabled true
            shrinkResources false
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }
    }
    bundle {
        language {
            enableSplit = false
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dynamicFeatures = [':DocumentScannerAndSync']
}

Properties props = new Properties()
def propFile = file('../signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {

        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
    android.buildTypes.release.signingConfig = null
}